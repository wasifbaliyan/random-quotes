{"version":3,"sources":["quotebox.jsx","App.js","index.js"],"names":["QuoteBox","quote","color","onClick","className","aria-hidden","content","title","author","target","rel","href","style","backgroundColor","App","state","isLoading","handleClick","a","fetch","response","json","setState","generateRandomColor","r","Math","floor","random","g","b","this","Fragment","minHeight","textDecoration","Component","ReactDOM","render","document","getElementById"],"mappings":"gTA4CeA,EA1CE,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAChC,OACE,yBAAKC,UAAU,+BACb,yBAAKA,UAAU,+DACb,gCAAYA,UAAU,cACpB,uBAAGA,UAAU,QACX,uBAAGA,UAAU,mBAAmBC,cAAY,SAC3C,IAAMJ,EAAMK,SAEf,4BAAQF,UAAU,qBAChB,0BAAMG,MAAM,UAAUN,EAAMO,UAGhC,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,8CACb,uBACEK,OAAO,SACPC,IAAI,sBACJC,KAAI,sFAAiFV,EAAMK,QAAvF,eAAqGL,EAAMO,QAC/GI,MAAO,CACLC,gBAAiBX,GAEnBE,UAAU,+BAEV,uBAAGA,UAAU,gBAAgBC,cAAY,UAE3C,4BACEO,MAAO,CACLC,gBAAiBX,GAEnBE,UAAU,8BACVD,QAASA,GAET,uBAAGC,UAAU,2BAA2BC,cAAY,eCoHnDS,G,iNA3EbC,MAAQ,CACNd,MAAO,GACPC,MAAO,GACPc,WAAW,G,EAWbC,Y,sBAAc,8BAAAC,EAAA,sEACSC,MAAM,kCADf,cACRC,EADQ,gBAEMA,EAASC,OAFf,OAERpB,EAFQ,OAGZ,EAAKqB,SAAS,CAAErB,QAAOC,MAAO,EAAKqB,wBAHvB,2C,EAKdA,oBAAsB,WACpB,IAAMC,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAC1B,MAAM,OAAN,OAAcH,EAAd,YAAmBI,EAAnB,YAAwBC,EAAxB,M,qNAjBqBV,MAAM,kC,cAAvBC,E,gBACcA,EAASC,O,OAAvBpB,E,OACJ6B,KAAKR,SAAS,CACZrB,QACAe,WAAW,EACXd,MAAO4B,KAAKP,wB,qIAcN,IAAD,EAC6BO,KAAKf,MAAjCb,EADD,EACCA,MAAOD,EADR,EACQA,MAAOe,EADf,EACeA,UACtB,OACE,kBAAC,IAAMe,SAAP,KACE,yBACEnB,MAAO,CACLoB,UAAW,QACX9B,MAAO4B,KAAKf,MAAMb,MAClBW,gBAAiBiB,KAAKf,MAAMb,QAG9B,yBAAKE,UAAU,8BACb,wBACEA,UAAWY,EAAY,sBAAwB,mBADjD,0BAMCA,EACC,yBAAKZ,UAAU,UAAf,cAEA,kBAAC,EAAD,CACEF,MAAOA,EACPD,MAAOA,EACPE,QAAS2B,KAAKb,cAIlB,wBACEb,UAAWY,EAAY,sBAAwB,mBADjD,uBAGyB,IACvB,uBACEJ,MAAO,CAAEqB,eAAgB,QACzBtB,KAAK,uCACLD,IAAI,sBACJD,OAAO,UAEP,wBAAIL,UAAWY,EAAY,kBAAoB,cAA/C,yB,GAhEEkB,c,YCpElBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c9b89c95.chunk.js","sourcesContent":["import React from \"react\";\n\nconst QuoteBox = ({ quote, color, onClick }) => {\n  return (\n    <div className=\"row  justify-content-center\">\n      <div className=\"col col-md-6 bg-light p-5 shadow rounded align-items-center\">\n        <blockquote className=\"blockquote\">\n          <p className=\"mb-0\">\n            <i className=\"fa fa-quote-left\" aria-hidden=\"true\"></i>\n            {\" \" + quote.content}\n          </p>\n          <footer className=\"blockquote-footer\">\n            <cite title=\"Author\">{quote.author}</cite>\n          </footer>\n        </blockquote>\n        <div className=\"container\">\n          <div className=\"row align-items-end justify-content-around\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={`https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"${quote.content}\" - ${quote.author}`}\n              style={{\n                backgroundColor: color,\n              }}\n              className=\"btn btn-sm text-white px-3 \"\n            >\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n            </a>\n            <button\n              style={{\n                backgroundColor: color,\n              }}\n              className=\"btn btn-sm text-white px-3 \"\n              onClick={onClick}\n            >\n              <i className=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuoteBox;\n","import React, { Component } from \"react\";\n\nimport QuoteBox from \"./quotebox\";\nimport \"./App.css\";\n\n// export default function App() {\n//   const [quote, setQuote] = useState({});\n//   const [color, setColor] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(true);\n\n//   const generateRandomColor = () => {\n//     const r = Math.floor(Math.random() * 256);\n//     const g = Math.floor(Math.random() * 256);\n//     const b = Math.floor(Math.random() * 256);\n//     return `rgb(${r},${g},${b})`;\n//   };\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       let response = await fetch(`https://api.quotable.io/random`);\n//       let quote = await response.json();\n//       setQuote(quote);\n//       setIsLoading(false);\n//       setColor(generateRandomColor());\n//     };\n//     getData();\n//   }, [quote, color, isLoading]);\n\n//   const handleClick = async () => {\n//     let response = await fetch(`https://api.quotable.io/random`);\n//     let quote = await response.json();\n//     setColor(generateRandomColor());\n//     setIsLoading(false);\n//     setQuote(quote);\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <div\n//         style={{\n//           height: \"100vh\",\n//           color: color,\n//           backgroundColor: color,\n//         }}\n//       >\n//         <div className=\"container text-center py-5\">\n//           <h2 className={isLoading ? \"text-secondary my-5\" : \"text-light my-5\"}>\n//             Random Quote Generator\n//           </h2>\n\n//           {isLoading ? (\n//             <div className=\"loader\">Loading...</div>\n//           ) : (\n//             <QuoteBox color={color} quote={quote} onClick={handleClick} />\n//           )}\n\n//           <h6 className={isLoading ? \"text-secondary my-5\" : \"text-light my-5\"}>\n//             &copy; 2020 created by{\" \"}\n//             <a\n//               style={{ textDecoration: \"none\" }}\n//               href=\"https://www.twitter.com/wasifbaliyan\"\n//               rel=\"noopener noreferrer\"\n//               target=\"_blank\"\n//             >\n//               <em className={isLoading ? \"text-secondary \" : \"text-light\"}>\n//                 wasifbaliyan\n//               </em>\n//             </a>\n//           </h6>\n//         </div>\n//       </div>\n//     </React.Fragment>\n//   );\n// }\n\nclass App extends Component {\n  state = {\n    quote: {},\n    color: \"\",\n    isLoading: true,\n  };\n  async componentDidMount() {\n    let response = await fetch(`https://api.quotable.io/random`);\n    let quote = await response.json();\n    this.setState({\n      quote,\n      isLoading: false,\n      color: this.generateRandomColor(),\n    });\n  }\n  handleClick = async () => {\n    let response = await fetch(`https://api.quotable.io/random`);\n    let quote = await response.json();\n    this.setState({ quote, color: this.generateRandomColor() });\n  };\n  generateRandomColor = () => {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgb(${r},${g},${b})`;\n  };\n  render() {\n    const { color, quote, isLoading } = this.state;\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            minHeight: \"100vh\",\n            color: this.state.color,\n            backgroundColor: this.state.color,\n          }}\n        >\n          <div className=\"container text-center py-5\">\n            <h2\n              className={isLoading ? \"text-secondary my-5\" : \"text-light my-5\"}\n            >\n              Random Quote Generator\n            </h2>\n\n            {isLoading ? (\n              <div className=\"loader\">Loading...</div>\n            ) : (\n              <QuoteBox\n                color={color}\n                quote={quote}\n                onClick={this.handleClick}\n              />\n            )}\n\n            <h6\n              className={isLoading ? \"text-secondary my-5\" : \"text-light my-5\"}\n            >\n              &copy; 2020 created by{\" \"}\n              <a\n                style={{ textDecoration: \"none\" }}\n                href=\"https://www.twitter.com/wasifbaliyan\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <em className={isLoading ? \"text-secondary \" : \"text-light\"}>\n                  wasifbaliyan\n                </em>\n              </a>\n            </h6>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}